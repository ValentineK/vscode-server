name: Build and Push VS Code Server

on:
  workflow_dispatch:
  schedule:
    # Run daily at 6 AM UTC to check for new releases
    - cron: '0 6 * * *'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get latest code-server version
        id: get-version
        run: |
          # Fetch the latest release tag from codercom/code-server
          BASE_VERSION=$(curl -s "https://api.github.com/repos/coder/code-server/releases/latest" | grep '"tag_name":' | sed 's/.*"tag_name": *"v\?\([^"]*\)".*/\1/')
          DOCKER_VERSION="${BASE_VERSION}-bookworm"
          echo "Latest code-server version: $BASE_VERSION"
          echo "Docker tag version: $DOCKER_VERSION"
          echo "version=$DOCKER_VERSION" >> $GITHUB_OUTPUT
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT

      - name: Check if version already exists
        id: check-version
        run: |
          # Check if this version already exists in our registry
          VERSION="${{ steps.get-version.outputs.version }}"

          # Check if tag exists in Docker Hub
          if docker manifest inspect valentinek/vscode-server:$VERSION > /dev/null 2>&1; then
            echo "Version $VERSION already exists, skipping build"
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION not found, proceeding with build"
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        if: steps.check-version.outputs.should_build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            CODE_SERVER_VERSION=${{ steps.get-version.outputs.version }}
          tags: |
            valentinek/vscode-server:${{ steps.get-version.outputs.version }}
            valentinek/vscode-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output build information
        if: steps.check-version.outputs.should_build == 'true'
        run: |
          echo "✅ Successfully built and pushed:"
          echo "  - valentinek/vscode-server:${{ steps.get-version.outputs.version }}"
          echo "  - valentinek/vscode-server:latest"
          echo ""
          echo "Built for architectures: linux/amd64, linux/arm64"
          echo "Based on code-server version: ${{ steps.get-version.outputs.version }}"

      - name: Skip message
        if: steps.check-version.outputs.should_build == 'false'
        run: |
          echo "⏭️ Skipped build - version ${{ steps.get-version.outputs.version }} already exists"